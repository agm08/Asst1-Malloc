Test Plan of E and F
Our first workload E, was a pretty simple test. To start, it would malloc 25 bytes of memory for each malloc call. It would call malloc multiple times until it reaches the max capacity and there is no more space to malloc again. We would know this if the final pointer that we malloced was pointing to NULL. Once this is done, we will free all our pointers using our free function that will set the metadata bookmarks to on. We included this test case to make sure that our malloc function would work and not get any type of segmentation error.
Our second workload F, was a plan to test our combineBlocks Function and to see if it would allocate the proper amount of bytes to each malloc. What we initially did was malloc 25 bytes until reaching Full Capacity, creating new metadata after every call. We would know it is at full capacity, if the final metadata pointer we malloced was pointing to  NULL. Then, we would free all pointers, setting all metadata bookmarks to free, which we would then malloc 50 bytes instead. We did this in order to test our combineBlock Function to see if the correct amount of space would be given for the data when it would read for the free flags that were off. When done correctly, it will combine the free flags into data that would be available to use for the next malloc. Eventually there will not be enough memory to allocate, which will print “Insufficient memory” multiple times, which is what was expected.